1
00:00:00,000 --> 00:00:04,000
And here's my answer: this is all initialization over here, so we shouldn't touch it.

2
00:00:04,000 --> 00:00:06,000
But from here on, we want to do things twice.

3
00:00:06,000 --> 00:00:08,000
So we're going to put a "for" loop here,

4
00:00:08,000 --> 00:00:10,000
for t in range(T)

5
00:00:10,000 --> 00:00:17,000
and then we have to indent all the stuff below.

6
00:00:17,000 --> 00:00:19,000
I'll indent all the way to the final statement,

7
00:00:19,000 --> 00:00:22,000
but I only want to print the final distribution.

8
00:00:22,000 --> 00:00:25,000
Let's run it, and surprisingly,

9
00:00:25,000 --> 00:00:29,000
the orientations aren't really that well worked out.

10
00:00:29,000 --> 00:00:33,000
If I go down I find, still, fairly random orientations here.

11
00:00:33,000 --> 00:00:36,000
But if I go to 10 steps forward,

12
00:00:36,000 --> 00:00:38,000
which means the robot really moves quite a bit

13
00:00:38,000 --> 00:00:41,000
across its environment,

14
00:00:41,000 --> 00:00:43,000
and I hit the run button,

15
00:00:43,000 --> 00:00:47,000
I actually get orientations that all look alike.

16
00:00:47,000 --> 00:00:51,000
So you can see, they're all about 3.6, 3.8, 3.9, 3.7.

17
00:00:51,000 --> 00:00:55,000
You can see the "y" values are all about the same

18
00:00:55,000 --> 00:00:57,000
and the "x" values are all about the same.

19
00:00:57,000 --> 00:01:01,000
So this is the particle filter working.

