1
00:00:00,000 --> 00:00:03,000
The particle filter that you're going to program

2
00:00:03,000 --> 00:00:10,000
maintains a set of 1000 random guesses as to where the reward might be.

3
00:00:10,000 --> 00:00:13,000
Now, I'm not going to draw 1000 dots here,

4
00:00:13,000 --> 00:00:16,000
but let me explain how each of these dots looks like.

5
00:00:16,000 --> 00:00:21,000
Each of these dots is a vector which contains an X coordinate,

6
00:00:21,000 --> 00:00:26,000
in this case 38.2, a Y coordinate 12.4,

7
00:00:26,000 --> 00:00:30,000
and a heading direction of 0.1,

8
00:00:30,000 --> 00:00:35,000
which is the angle at which the robot points relative to the X axis.

9
00:00:35,000 --> 00:00:39,000
So, this robot moves forward, it will move slightly upwards.

10
00:00:39,000 --> 00:00:44,000
In fact, now our code, every time you call the function robot

11
00:00:44,000 --> 00:00:47,000
and assign it say to a particle,

12
00:00:47,000 --> 00:00:49,000
here the ith particle,

13
00:00:49,000 --> 00:00:53,000
these elements p[i].x, y, and orientation,

14
00:00:53,000 --> 00:00:55,000
which is the same as heading,

15
00:00:55,000 --> 00:00:57,000
are initialized at random.

16
00:00:57,000 --> 00:01:00,000
So, to make a particle set of 1000 particles

17
00:01:00,000 --> 00:01:09,000
what you have to program is a simple piece of code that assigns 1000 of those to a list.

18
00:01:09,000 --> 00:01:14,000
So, let's do this; let me set N=1000 for 1000 particles.

19
00:01:14,000 --> 00:01:17,000
Here's my initial set of particles; it's going to be an empty list,

20
00:01:17,000 --> 00:01:19,000
and I want you to fill in some code

21
00:01:19,000 --> 00:01:22,000
after which we have 1000 particles assigned to this vector over here.

22
00:01:22,000 --> 00:01:25,000
So, when I print the length of this thing

23
00:01:25,000 --> 00:01:30,000
I will get 1000 instead of 0.

