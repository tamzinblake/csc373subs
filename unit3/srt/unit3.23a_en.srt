1
00:00:00,000 --> 00:00:02,000
So here's my solution.

2
00:00:02,000 --> 00:00:04,000
It's the simple command it's: print eval(myrobot, p),

3
00:00:04,000 --> 00:00:06,000
I know it wasn't very hard,

4
00:00:06,000 --> 00:00:08,000
but it gets you a kind of fun to play with it.

5
00:00:08,000 --> 00:00:10,000
So here's the sequence of numbers I get out.

6
00:00:10,000 --> 00:00:15,000
It turns out, we don't always get the same number.

7
00:00:15,000 --> 00:00:18,000
Sometimes it doesn't work.

8
00:00:18,000 --> 00:00:20,000
Here's the second run.

9
00:00:20,000 --> 00:00:22,000
These are small values again,

10
00:00:22,000 --> 00:00:25,000
another run, another run.

11
00:00:25,000 --> 00:00:28,000
Here's one that's interesting, so we can look at these errors:

12
00:00:28,000 --> 00:00:30,000
5, 5, 7, 1,

13
00:00:30,000 --> 00:00:32,000
3, 5, 6, 7, 7, 6.

14
00:00:32,000 --> 00:00:34,000
It is a good run, so the error is down to 6,

15
00:00:34,000 --> 00:00:36,000
compared to whatever it would be

16
00:00:36,000 --> 00:00:40,000
if you didn't do particle filters and had a random set of particles.

17
00:00:40,000 --> 00:00:45,000
In fact, to understand this, let me just take the "print eval" command

18
00:00:45,000 --> 00:00:51,000
and move it to the very beginning, where we have done no particle filters.

19
00:00:51,000 --> 00:00:53,000
So hit run, and what you will find is

20
00:00:53,000 --> 00:00:58,000
it goes from 38 to 4, 3, 3 in just one step of particle filtering,

21
00:00:58,000 --> 00:01:01,000
which is a drastic reduction of error.

22
00:01:01,000 --> 00:01:05,000
Now running many times, there will be cases where it fails,

23
00:01:05,000 --> 00:01:09,000
where there's just no particle nearby.

24
00:01:09,000 --> 00:01:11,000
Strangely, they don't show up right now.

25
00:01:11,000 --> 00:01:14,000
When I was testing it and programming it, I actually got one of those.

26
00:01:14,000 --> 00:01:17,000
I had an error of like 15 or 20.

27
00:01:17,000 --> 00:01:19,000
Whenever I want to demo something it just doesn't work.

28
00:01:19,000 --> 00:01:21,000
Well, this particle filter is just too good.

29
00:01:21,000 --> 00:01:26,000
It just gets the answer relatively right really, really quickly.

