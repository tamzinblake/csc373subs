1
00:00:00,000 --> 00:00:03,000
And here's the routine. It's very short.

2
00:00:03,000 --> 00:00:06,000
It goes through the measurements. It assumes it has as many motions as measurements.

3
00:00:06,000 --> 00:00:10,000
It first applies the measurement as before. Then it applies the motion.

4
00:00:10,000 --> 00:00:14,000
When it's done with it, it prints the output, and the output is interesting.

5
00:00:14,000 --> 00:00:19,000
The world has a green, a red, a red, and a green, and a green field.

6
00:00:19,000 --> 00:00:25,000
And the robot saw red, followed by a right motion, and then green.

7
00:00:25,000 --> 00:00:28,000
And that suggests that it probably started

8
00:00:28,000 --> 00:00:31,000
with with the highest likelihood in grid cell number 3,

9
00:00:31,000 --> 00:00:35,000
which is the right-most of the two red cells.

10
00:00:35,000 --> 00:00:40,000
It saw red correctly. It then moved to the right by 1,

11
00:00:40,000 --> 00:00:43,000
saw green correctly, moved to the right again.

12
00:00:43,000 --> 00:00:46,000
It now finds itself most likely in the right-most cell.

13
00:00:46,000 --> 00:00:50,000
This is just looking at these values over here without any probabilistic math

14
00:00:50,000 --> 00:00:52,000
and any code limitation.

15
00:00:52,000 --> 00:00:59,000
Let's look at the output: 0.2, 0.1, 0.08, 0.16, 0.38.

16
00:00:59,000 --> 00:01:04,000
Very correctly, the robot most likely assigns its position to the right-most cell,

17
00:01:04,000 --> 00:01:08,000
as should be, given the sequence of observations over here.

