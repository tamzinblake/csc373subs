1
00:00:00,000 --> 00:00:02,000
I want to make this a little bit more beautiful.

2
00:00:02,000 --> 00:00:05,000
I will introduce a variable called "world",

3
00:00:05,000 --> 00:00:09,000
and for each of the 5 grid cells, world specifies the color of the cell:

4
00:00:09,000 --> 00:00:13,000
green, red, red, green, green.

5
00:00:13,000 --> 00:00:17,000
Further, I define the measurement Z to be red.

6
00:00:17,000 --> 00:00:21,000
Can you define a function, called "sense", which is the measurement update,

7
00:00:21,000 --> 00:00:26,000
which takes as input the initial distribution p

8
00:00:26,000 --> 00:00:30,000
and the measurement Z and all the other global variables

9
00:00:30,000 --> 00:00:33,000
and outputs a normalized distribution called "Q" in which Q reflects

10
00:00:33,000 --> 00:00:37,000
the non-normalized product of our input probability,

11
00:00:37,000 --> 00:00:40,000
which will be 0.2 and so on,

12
00:00:40,000 --> 00:00:45,000
and the corresponding pHit or pMiss in accordance

13
00:00:45,000 --> 00:00:49,000
to whether these colors over here agree or disagree?

14
00:00:49,000 --> 00:00:55,000
So when I call sense(p, Z), I expect to get the vector as output as before,

15
00:00:55,000 --> 00:00:57,000
but now in the form of a function.

16
00:00:57,000 --> 00:01:02,000
The reason I'd like to have a function here is because later on as we build our localizer

17
00:01:02,000 --> 00:01:04,000
we will apply this to every single measurement over and over again.

18
00:01:04,000 --> 00:01:09,000
So this function should really respond to any arbitrary p and arbitrary Z,

19
00:01:09,000 --> 00:01:13,000
either red or green, and give me the non-normalized Q,

20
00:01:13,000 --> 00:01:20,000
which gives me the vector 0.04, 0.12, and so on and so on.

